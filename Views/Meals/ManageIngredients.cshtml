@using TrainingPlanApp.Web.Models.Meal
@using TrainingPlanApp.Web.Constants

@model MealManageIngredientsVM

@{
	ViewData["Title"] = "ManageIngredients";
	var errorMessage = TempData["ErrorMessage"] as string;
}

<h1>Manage Exercises</h1>

<p>
	<a asp-action="Index" class="btn btn-dark btn-sm">Back to List</a>&nbsp;
	<button class="btn btn-primary btn-sm addBtn" data-addmealid="@Model.Id" type="button"><i class="fa-solid fa-plus">&nbsp;</i>Add Ingredient</button>
</p>

@if (!string.IsNullOrEmpty(errorMessage))
{
	<div class="alert alert-danger">
		@errorMessage
	</div>
}
<table class="table">
	<thead>
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Ingredients)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.IngredientQuantities)
			</th>
			<th>
			</th>
			<th>
			</th>
			<th>
			</th>
			<th>
			</th>
			<th>
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@for (int i = 0; i < Model.IngredientIds.Count; i++)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => Model.Ingredients[i].Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => Model.IngredientQuantities[i])
				</td>
				<td>
					Kcal: @Html.DisplayFor(modelItem => Model.IngredientKcal[i])
				</td>
				<td>
					Proteins: @Model.IngredientProteins[i].ToString("F1")
				</td>
				<td>
					Carbs: @Model.IngredientCarbohydrates[i].ToString("F1")
				</td>
				<td>
					Fats: @Model.IngredientFats[i].ToString("F1")
				</td>
				<td>
					Fibres: @Model.IngredientFibres[i].ToString("F1")
				</td>
				<td class="text-end">
					<button data-removemealid="@Model.Id"
							data-removeindex="@i"
							data-removename="@Model.Ingredients[i].Name"
							class="btn btn-danger btn-sm removeBtn" type="button">
						<i class="fa-solid fa-trash">&nbsp;</i>Remove
					</button>
				</td>
			</tr>
		}
		<tr>
			<td>
				<Strong>Total</Strong>
			</td>
			<td>
				<Strong></Strong>
			</td>
			<td>
				<Strong>Kcal: @Html.DisplayFor(model => model.Kcal)</Strong>
			</td>
			<td>
				<Strong>Proteins: @Model.Proteins.ToString("F1")</Strong>
			</td>
			<td>
				<Strong>Carbs: @Model.Carbohydrates.ToString("F1")</Strong>
			</td>
			<td>
				<Strong>Fats: @Model.Fats.ToString("F1")</Strong>
			</td>
			<td>
				<Strong>Fibres: @Model.Fibres.ToString("F1")</Strong>
			</td>
			<td></td>
		</tr>
	</tbody>
</table>


<!-- MODAL FOR ADDING INGREDIENT -->
<div class="modal fade" id="addIngredientModal" tabindex="-1" role="dialog" aria-labelledby="addIngredientModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="addIngredientModalLabel">Add Ingredient</h5>
				<button type="button" class="close btn btn-dark" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form id="addForm" asp-action="AddIngredient" method="post">
					<input type="hidden" name="Id" id="addMealId" />
					<div class="form-group">
						<label asp-for="NewIngredientId" class="control-label"></label>
						<select asp-for="NewIngredientId" asp-items="Model?.AvailableIngredients" class="form-select">
							<option>Select exercise</option>
						</select>
						<span asp-validation-for="NewIngredientId" class="text-danger"></span>
					</div>
					<div class="form-group">
						<label asp-for="NewIngredientQuantity" class="control-label"></label>
						<input asp-for="NewIngredientQuantity" class="form-control" />
						<span asp-validation-for="NewIngredientQuantity" class="text-danger"></span>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-primary" id="confirmAddBtn">Add</button>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>


<!-- MODAL FOR INGREDIENT REMOVE -->
<div class="modal fade" id="removeIngredientModal" tabindex="-1" role="dialog" aria-labelledby="removeIngredientModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="removeIngredientModalLabel">Remove Ingredient</h5>
				<button type="button" class="close btn btn-dark" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form id="removeForm" asp-action="RemoveIngredient">
					<input type="hidden" name="mealId" id="removeMealId" />
					<input type="hidden" name="index" id="removeIndex" />
					<p>Are you sure you want to remove this ingredient?</p>
					<h5 id="removeName"></h5>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-danger" id="confirmRemoveBtn">Remove</button>
			</div>
		</div>
	</div>
</div>

@section Scripts
{
	<script>
		$(function () {
			// DATATABLE INITIALIZE
			$('.table').DataTable();

			// SCRIPT TO HANDLE CLOSING MODALS
			$(document).on('click', '.close', function () {
				$(this).closest('.modal').modal('hide');
			});

			// SCRIPT TO HANDLE ADDING EXERCISES TO MEAL
			$(document).on('click', '.addBtn', function () {
				var btn = $(this);
				var addMealId = btn.data("addmealid");

				$('#addMealId').val(addMealId);

				$('#addIngredientModal').modal('show');
			});

			// SCRIPT TO HANDLE ADDING MEAL TO MEAL
			$(document).on('click', '#confirmAddBtn', function () {
				$('#addForm').submit();
			});

			// SCRIPT TO HANDLE REMOVING INGREDIENT FROM MEAL
			$(document).on('click', '.removeBtn', function () {
				var btn = $(this);
				var removeMealId = btn.data("removemealid");
				var removeIndex = btn.data("removeindex");
				var removeName = btn.data("removename");


				$('#removeMealId').val(removeMealId);
				$('#removeIndex').val(removeIndex);
				$('#removeName').text(removeName);

				$('#removeIngredientModal').modal('show');
			});

			// SCRIPT TO HANDLE REMOVING INGREDIENT FROM MEAL
			$(document).on('click', '#confirmRemoveBtn', function () {
				$('#removeForm').submit();
			});
		});
	</script>
}
