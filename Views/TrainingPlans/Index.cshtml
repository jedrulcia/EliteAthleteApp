@using TrainingPlanApp.Web.Models.TrainingPlan
@using TrainingPlanApp.Web.Constants

@model IEnumerable<TrainingPlanIndexVM>?

@{
	ViewData["Title"] = "Index";
}

@if (User.IsInRole(Roles.User))
{
	<h1>Training Plans</h1>
	<table class="table">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.Date)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Name)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				if (!item.IsEmpty)
				{
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.Date)
						</td>
						<td>
							@if (item.IsCompleted == true)
							{
							<a asp-action="Details" asp-route-id="@item.Id">
								<i class="btn btn-success">@Html.DisplayFor(modelItem => item.Name)</i></a>
							}
							else
							{
							<a asp-action="Details" asp-route-id="@item.Id">
								<i class="btn btn-danger">@Html.DisplayFor(modelItem => item.Name)</i></a>
							}
						</td>
						<td class="text-end">
							<form asp-action="ChangeStatus" class="d-inline">
								<input name="Id" value="@item.Id" type="hidden" />
								<input name="status" value="true" type="hidden" />
								<input name="userId" value="@item.UserId" type="hidden" />
								<input name="trainingModuleId" value="@item.TrainingModuleId" type="hidden" />
								<button type="submit" class="btn btn-success btn-sm"><i class="fa-solid fa-check">&nbsp;</i></button>
							</form>
							<form asp-action="ChangeStatus" class="d-inline">
								<input name="Id" value="@item.Id" type="hidden" />
								<input name="status" value="false" type="hidden" />
								<input name="userId" value="@item.UserId" type="hidden" />
								<input name="trainingModuleId" value="@item.TrainingModuleId" type="hidden" />
								<button type="submit" class="btn btn-danger btn-sm"><i class="fa-solid fa-x">&nbsp;</i></button>
							</form>
						</td>
					</tr>
				}
			}
		</tbody>
	</table>

}

@if (User.IsInRole(Roles.Administrator))
{
	<h1>Training Plans</h1>
	<table class="table">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.Date)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Name)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Date)
					</td>
					<td>
						@if (item.IsEmpty)
						{
							<a asp-action="Details" asp-route-id="@item.Id">
								<i class="btn btn-secondary">@Html.DisplayFor(modelItem => item.Name)</i></a>
						}
						else if (item.IsCompleted == true)
						{
							<a asp-action="Details" asp-route-id="@item.Id">
								<i class="btn btn-success">@Html.DisplayFor(modelItem => item.Name)</i></a>
						}
						else
						{
							<a asp-action="Details" asp-route-id="@item.Id">
								<i class="btn btn-danger">@Html.DisplayFor(modelItem => item.Name)</i></a>
						}
					</td>
					<td>
						<a asp-action="ManageExercises" asp-route-id="@item.Id" asp-route-trainingModuleId="@item.TrainingModuleId">
							<i class="text-end btn btn-secondary btn-sm"> Exercises</i>
						</a>
						<button data-copyFromId="@item.Id" data-copyToId="" data-trainingModuleId="@item.TrainingModuleId" class="btn btn-danger btn-sm copyBtn" type="button"><i>Copy</i></button>
					</td>
				</tr>
			}
		</tbody>
	</table>

}

<form id="copyForm" asp-action="CopyTrainingPlan">
	<input type="hidden" id="copyFromId" name="copyFromId" />
	<input type="hidden" id="copyToId" name="copyToId" />
	<input type="hidden" id="trainingModuleId" name="trainingModuleId" />
</form>

@section Scripts
{
	<script>
		$(function () {
			$('.copyBtn').click(function (e) {
				// Get the triggering element and the data from the item being copied
				var btn = $(this);
				var copyFromId = btn.data("copyfromid");
				var trainingModuleId = btn.data("trainingmoduleid");

				// Create dropdown on the server side
				var dropdown = `<select id="copyToSelect" class="form-control">`;

				// Sort the list by date and generate options with different background colors based on item.IsEmpty
		@foreach (var item in Model.OrderBy(m => m.Date))
		{
			// Set background color to gray if IsEmpty, red otherwise, and make text color white
			var backgroundColor = item.IsEmpty ? "background-color: gray;" : "background-color: red;";
			var textColor = "color: white;";

			<text>
						dropdown += `<option value="@item.Id" style="@backgroundColor @textColor">@item.Name</option>`;
			</text>
		}
					dropdown += `</select>`;

				// Display a modal with dynamically generated dropdown
				swal({
					title: "Select a plan to copy to",
					content: {
						element: "div",
						attributes: {
							innerHTML: dropdown
						}
					},
					buttons: true,
					dangerMode: true
				}).then((confirm) => {
					if (confirm) {
						// Get the selected value from the dropdown
						var copyToId = $('#copyToSelect').val();

						// Set values in hidden form fields
						$('#copyFromId').val(copyFromId);
						$('#copyToId').val(copyToId);
						$('#trainingModuleId').val(trainingModuleId);

						// Highlight selected option
						$('#copyToSelect option:selected').css({
							'background-color': $('#copyToSelect option:selected').css('background-color'),
							'color': 'white'
						});

						// Submit the form
						$('#copyForm').submit();
					}
				});
			});
		});
	</script>
}



