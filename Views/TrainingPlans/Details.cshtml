@using EliteAthleteApp.Models.TrainingPlan
@using EliteAthleteApp.Configurations.Constants

@model TrainingPlanDetailsVM

@{
	ViewData["Title"] = "Details";
	var errorMessage = TempData["ErrorMessage"] as string;
}

@if (!string.IsNullOrEmpty(errorMessage))
{
	<div class="alert alert-danger">
		@errorMessage
	</div>
}

<div class="col-md-12">
	<ul class="nav nav-tabs" id="actionPanelTabs" role="tablist">
		<li class="nav-item" role="presentation">
			<a asp-action="Index" asp-controller="TrainingPlans" asp-route-trainingModuleId="@Model?.TrainingModuleId" class="nav-link d-flex justify-content-center align-items-center" id="trainingPlanTab" aria-controls="trainingPlan" aria-selected="false">
				<i class="fa-solid fa-arrow-left"></i>&nbsp;<strong>Back to Training Plans</strong>
			</a>
		</li>
		<li class="nav-item" role="presentation">
			<button data-addexercisetrainingplanid="@Model.Id"
					data-addexercisecoachid="@Model.CoachId"
					class="nav-link addExerciseBtn d-flex justify-content-center align-items-center" type="button" aria-selected="false">
				<i class="bi bi-plus-square-fill">&nbsp;</i>
				<strong>Add Exercise</strong>
			</button>
		</li>
	</ul>
	<br />
</div>

<div class="row">
	<div class="col-md-5">

		@if (User.IsInRole(Roles.Coach) || User.IsInRole(Roles.Administrator))
		{
			<table class="table">
				<thead>
					<tr>
						<th></th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@for (int i = 0; i < Model.TrainingPlanExerciseDetailVMs.Count; i++)
					{
						<tr>
							<td>
								<strong>@Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].Index): @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].ExerciseVM.Name)</strong>
							</td>
							<td class="text-end">
								<div class="dropdown">
									<button class="btn btn-outline-primary-a btn-sm dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
										<strong>Actions</strong>
									</button>
									<ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
										<li>
											<button data-editexercisetrainingplanid="@Model.Id"
													data-editexercisecoachid="@Model.CoachId"
													data-editexercisetrainingplanexercisedetailid="@Model.TrainingPlanExerciseDetailVMs[i].Id"
													class="dropdown-item editExerciseBtn">
												<i class="bi bi-pencil">&nbsp;</i>Edit
											</button>
										</li>
										<li>
											<button data-removeexercisetrainingplanid="@Model.Id"
													data-removeexercisename="@Model.TrainingPlanExerciseDetailVMs[i].ExerciseVM.Name"
													data-removeexercisetrainingplanexercisedetailid="@Model.TrainingPlanExerciseDetailVMs[i].Id"
													class="dropdown-item removeExerciseBtn">
												<i class="bi bi-trash">&nbsp;</i>Remove
											</button>
										</li>
									</ul>
								</div>
							</td>
						</tr>
					}
				</tbody>
			</table>
		}
	</div>
	<div class="col-md-7">
		<div class="card">
			<div class="card-body">
				<div id="carouselExample" class="carousel slide">
					<div class="carousel-inner">
						@for (int i = 0; i < Model.TrainingPlanExerciseDetailVMs.Count; i++)
						{
							<div class="carousel-item @(i == 0 ? "active" : "")">
								<div class="container">
										<dd class="col-sm-12 text-primary">
											<h1>@Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].Index): @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].ExerciseVM.Name)</h1>
										</dd>
										<dd class="col-sm-12">
											<iframe width="590" height="330" src="@Model.TrainingPlanExerciseDetailVMs[i].ExerciseVM.YoutubeLink" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
										</dd>
										<dd class="col-sm-12">
											<span class="text-primary">Category:</span> @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].ExerciseVM.ExerciseCategory.Name)
										</dd>
										<dd class="col-sm-12">
											<span class="text-primary">Description:</span>  @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].ExerciseVM.Description)
										</dd>
										<dd class="col-sm-12">
											<span class="text-primary">Amount:</span>  @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].Sets)x @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].Units)
										</dd>
										<dd class="col-sm-12">
											<span class="text-primary">Weight:</span>  @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].Weight)
										</dd>
										<dd class="col-sm-12">
											<span class="text-primary">Rest:</span>  @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].RestTime)
										</dd>
										<dd class="col-sm-12">
											<span class="text-primary">Notes:</span>  @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].Note)
										</dd>
									</div>
							</div>
						}
					</div>
					<button class="carousel-control-prev position-absolute start-0 translate-middle-y ms-4" type="button" data-bs-target="#carouselExample" data-bs-slide="prev">
						<span class="carousel-control-prev-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Previous</span>
					</button>
					<button class="carousel-control-next position-absolute end-0 translate-middle-y me-4" type="button" data-bs-target="#carouselExample" data-bs-slide="next">
						<span class="carousel-control-next-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Next</span>
					</button>
				</div>
			</div>
		</div>
	</div>

</div>

<!-- MODAL FOR ADDING EXERCISE -->
<div class="modal fade" id="trainingPlanAddExerciseModal" tabindex="-1" role="dialog" aria-labelledby="trainingPlanAddExerciseModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header text-primary">
				<h5 class="modal-title" id="trainingPlanAddExerciseLabel">Add Exercise</h5>
				<button type="button" class="close btn btn-dark" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="trainingPlanAddExerciseContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR EDITING EXERCISE -->
<div class="modal fade" id="trainingPlanEditExerciseModal" tabindex="-1" role="dialog" aria-labelledby="trainingPlanEditExerciseModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header text-primary">
				<h5 class="modal-title" id="trainingPlanEditExerciseModalLabel">Edit Exercise</h5>
				<button type="button" class="close btn btn-dark" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="trainingPlanEditExerciseContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR EXERCISE REMOVE -->
<div class="modal fade" id="trainingPlanRemoveExerciseModal" tabindex="-1" role="dialog" aria-labelledby="trainingPlanRemoveExerciseModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header text-primary">
				<h5 class="modal-title" id="trainingPlanRemoveExerciseModalLabel">Remove Training Module</h5>
				<button type="button" class="close btn btn-dark" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="trainingPlanRemoveExerciseContent">
			</div>
		</div>
	</div>
</div>

@section Scripts
{
	<script>
		$(function () {
			// DATATABLE INITIALIZE
			$('.table').DataTable();

			// SCRIPT TO HANDLE CLOSING MODALS
			$(document).on('click', '.close', function () {
				$(this).closest('.modal').modal('hide');
			});

			// AJAX FOR LOADING EXERCISE CREATE MODAL
			$(document).on('click', '.addExerciseBtn', function (e) {
				e.preventDefault();

				var trainingPlanId = $(this).data("addexercisetrainingplanid");
				var coachId = $(this).data("addexercisecoachid")
				$.ajax({
					url: '@Url.Action("AddExercise", "TrainingPlans")',
					type: 'GET',
					data: { trainingPlanId: trainingPlanId, coachId: coachId },
					success: function (data) {
						$('#trainingPlanAddExerciseContent').html(data);
						$('#trainingPlanAddExerciseModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the training plan add exercise modal.");
					}
				});
			});

			// AJAX FOR LOADING EXERCISE CREATE MODAL
			$(document).on('click', '.editExerciseBtn', function (e) {
				e.preventDefault();

				var trainingPlanId = $(this).data("editexercisetrainingplanid");
				var trainingPlanExerciseDetailId = $(this).data("editexercisetrainingplanexercisedetailid");
				var coachId = $(this).data("editexercisecoachid");
				$.ajax({
					url: '@Url.Action("EditExercise", "TrainingPlans")',
					type: 'GET',
					data: { trainingPlanId: trainingPlanId, trainingPlanExerciseDetailId: trainingPlanExerciseDetailId, coachId: coachId },
					success: function (data) {
						$('#trainingPlanEditExerciseContent').html(data);
						$('#trainingPlanEditExerciseModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the training plan edit exercise modal.");
					}
				});
			});

			// AJAX FOR LOADING EXERCISE CREATE MODAL
			$(document).on('click', '.removeExerciseBtn', function (e) {
				e.preventDefault();

				var trainingPlanId = $(this).data("removeexercisetrainingplanid");
				var trainingPlanExerciseDetailId = $(this).data("removeexercisetrainingplanexercisedetailid");
				var name = $(this).data("removeexercisename");
				$.ajax({
					url: '@Url.Action("RemoveExercise", "TrainingPlans")',
					type: 'GET',
					data: { trainingPlanId: trainingPlanId, trainingPlanExerciseDetailId: trainingPlanExerciseDetailId, name: name },
					success: function (data) {
						$('#trainingPlanRemoveExerciseContent').html(data);
						$('#trainingPlanRemoveExerciseModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the training plan remove exercise modal.");
					}
				});
			});

		});
	</script>
}