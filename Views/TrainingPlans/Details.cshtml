@using EliteAthleteApp.Models.TrainingPlan
@using EliteAthleteApp.Constants

@model TrainingPlanDetailsVM

@{
	ViewData["Title"] = "Details";
}

@for (int i = 0; i < Model.TrainingPlanExerciseDetailVMs.Count; i++)
{
	<h1>@Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].Index): @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].ExerciseVM.Name) - @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].ExerciseVM.ExerciseCategory.Name)</h1>
	<dd class="col-sm-12">
		<iframe width="765" height="430" src="@Model.TrainingPlanExerciseDetailVMs[i].ExerciseVM.YoutubeLink" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
	</dd>
	<dd class="col-sm-12">
		@Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].ExerciseVM.Description)
	</dd>
	<dd class="col-sm-12">
		@Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].Sets)x @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].Units)
	</dd>
	<dd class="col-sm-12">
		Weight: @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].Weight)
	</dd>
	<dd class="col-sm-12">
		Rest: @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].RestTime)
	</dd>
	<dd class="col-sm-12">
		Notes: @Html.DisplayFor(modelItem => Model.TrainingPlanExerciseDetailVMs[i].Note)
	</dd>
}