@using EliteAthleteApp.Configurations.Constants
@using EliteAthleteApp.Models.User

@model UserPanelVM

@{
	ViewData["Title"] = "Panel";
	var errorMessage = TempData["ErrorMessage"] as string;
}

@if (!string.IsNullOrEmpty(errorMessage))
{
	<div class="alert alert-danger">
		@errorMessage
	</div>
}

<body>
	<h3 class="text-gradient-primary">@Model.UserVM.FirstName @Model.UserVM.LastName</h3>
	<div class="row justify-content-center">
		<div class="col-md-12">
			<ul class="nav nav-tabs" id="actionPanelTabs" role="tablist">
				<li class="nav-item" style="width: 270px;" role="presentation">
					<a asp-action="Index" asp-controller="TrainingModules" asp-route-userId="@Model.UserVM.Id" class="nav-link d-flex justify-content-center align-items-center" id="trainingModuleTab" aria-controls="trainingModule" aria-selected="false">
						<i class="fa-solid fa-dumbbell"></i>&nbsp;<strong>Training Modules</strong>
					</a>
				</li>
				<li class="nav-item ms-auto" style="width: 220px;" role="presentation">
					<button data-userid="@Model.UserVM.Id"
							class="nav-link createOrmBtn d-flex justify-content-center align-items-center" type="button" aria-selected="false">
						<i class="bi bi-plus-square-fill">&nbsp;</i>
						<strong>New ORM</strong>
					</button>
				</li>
				<li class="nav-item" style="width: 230px;" role="presentation">
					<button data-userid="@Model.UserVM.Id"
							class="nav-link createUbmBtn d-flex justify-content-center align-items-center" type="button" aria-selected="false">
						<i class="bi bi-plus-square-fill">&nbsp;</i>
						<strong>New UBM</strong>
					</button>
				</li>
				<li class="nav-item" style="width: 180px;" role="presentation">
					<button data-userid="@Model.UserVM.Id"
							class="nav-link createUbaBtn d-flex justify-content-center align-items-center" type="button" aria-selected="false">
						<i class="bi bi-plus-square-fill">&nbsp;</i>
						<strong>New UBA</strong>
					</button>
				</li>
				<li class="nav-item" style="width: 180px;" role="presentation">
					<button data-userid="@Model.UserVM.Id"
							class="nav-link createUmtBtn d-flex justify-content-center align-items-center" type="button" aria-selected="false">
						<i class="bi bi-plus-square-fill">&nbsp;</i>
						<strong>New UMT</strong>
					</button>
				</li>
			</ul>
			<br />
		</div>
		<div class="col-md-12">
			<ul class="nav nav-tabs" id="userPanelTabs" role="tablist">
				<li class="nav-item" style="width: 270px;" role="presentation">
					<a class="nav-link active d-flex justify-content-center align-items-center" id="userInfoTab" data-toggle="tab" data-userid="@Model.UserVM.Id" href="#userInfo" role="tab" aria-controls="userInfo" aria-selected="true">
						<i class="bi bi-person"></i>
						<strong>User Info</strong>
					</a>
				</li>
				<li class="nav-item ms-auto" style="width: 220px;" role="presentation">
					<a class="nav-link d-flex justify-content-center align-items-center" id="ormTab" data-toggle="tab" data-userid="@Model.UserVM.Id" href="#orm" role="tab" aria-controls="orm" aria-selected="true">
						<i class="fa-solid fa-dumbbell">&nbsp;</i>
						<strong>One Repetition Max</strong>
					</a>
				</li>
				<li class="nav-item" style="width: 230px;" role="presentation">
					<a class="nav-link d-flex justify-content-center align-items-center" id="ubmTab" data-toggle="tab" data-userid="@Model.UserVM.Id" href="#ubm" role="tab" aria-controls="ubm" aria-selected="true">
						<i class="fa-solid fa-ruler">&nbsp;</i>
						<strong>Body Measurements</strong>
					</a>
				</li>
				<li class="nav-item" style="width: 180px;" role="presentation">
					<a class="nav-link d-flex justify-content-center align-items-center" id="ubaTab" data-toggle="tab" data-userid="@Model.UserVM.Id" href="#uba" role="tab" aria-controls="uba" aria-selected="true">
						<i class="fa-solid fa-flask">&nbsp;</i>
						<strong>Body Analysis</strong>
					</a>
				</li>
				<li class="nav-item" style="width: 180px;" role="presentation">
					<a class="nav-link d-flex justify-content-center align-items-center" id="umtTab" data-toggle="tab" data-userid="@Model.UserVM.Id" href="#umt" role="tab" aria-controls="umt" aria-selected="true">
						<i class="fa-solid fa-notes-medical">&nbsp;</i>
						<strong>Medical Tests</strong>
					</a>
				</li>
			</ul>
			<br />
			<div class="tab-content" id="userPanelTabsContent">
				<div class="tab-pane fade show active" id="userInfo" role="tabpanel" aria-labelledby="userInfoTab">
					<h1><span class="badge bg-black d-block w-100"><strong>Info</strong></span></h1>
				</div>
				<div class="tab-pane fade" id="orm" role="tabpanel" aria-labelledby="ormTab">
					<h1><span class="badge bg-black d-block w-100"><strong>My ORMs (One-Rep Max)</strong></span></h1>
				</div>
				<div class="tab-pane fade" id="ubm" role="tabpanel" aria-labelledby="ubmTab">
					<h1><span class="badge bg-black d-block w-100"><strong>My UBMs</strong></span></h1>
				</div>
				<div class="tab-pane fade" id="uba" role="tabpanel" aria-labelledby="ubaTab">
					<h1><span class="badge bg-black d-block w-100"><strong>My UBAs</strong></span></h1>
				</div>
				<div class="tab-pane fade" id="umt" role="tabpanel" aria-labelledby="umtTab">
					<h1><span class="badge bg-black d-block w-100"><strong>My UMTs</strong></span></h1>
				</div>
			</div>
		</div>
	</div>
</body>

<!-- MODAL FOR ORM CREATE -->
<div class="modal fade" id="ormCreateModal" tabindex="-1" role="dialog" aria-labelledby="ormCreateModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="ormCreateModalLabel">
					<strong>Create One Repetition Max</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="ormCreateContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR ORM EDIT -->
<div class="modal fade" id="ormEditModal" tabindex="-1" role="dialog" aria-labelledby="ormEditModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="ormEditModalLabel">
					<strong>Edit One Repetition Max</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="ormEditContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR ORM DELETE -->
<div class="modal fade" id="ormDeleteModal" tabindex="-1" role="dialog" aria-labelledby="ormDeleteModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="ormDeleteModalLabel">
					<strong>Delete One Repetition Max</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="ormDeleteContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR UBM CREATE -->
<div class="modal fade" id="ubmCreateModal" tabindex="-1" role="dialog" aria-labelledby="ubmCreateModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="ubmCreateModalLabel">
					<strong>Create User Body Measurement</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="ubmCreateContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR UBM EDIT -->
<div class="modal fade" id="ubmEditModal" tabindex="-1" role="dialog" aria-labelledby="ubmEditModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="ubmEditModalLabel">
					<strong>Edit User Body Measurement</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="ubmEditContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR UBM DELETE -->
<div class="modal fade" id="ubmDeleteModal" tabindex="-1" role="dialog" aria-labelledby="ubmDeleteModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="ubmDeleteModalLabel">
					<strong>Delete User Body Measurement</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="ubmDeleteContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR UMT CREATE -->
<div class="modal fade" id="umtCreateModal" tabindex="-1" role="dialog" aria-labelledby="umtCreateModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="umtCreateModalLabel">
					<strong>Create User Medical Test</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="umtCreateContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR UMT EDIT -->
<div class="modal fade" id="umtEditModal" tabindex="-1" role="dialog" aria-labelledby="umtEditModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="umtEditModalLabel">
					<strong>Edit User Medical Test</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="umtEditContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR UMT DELETE -->
<div class="modal fade" id="umtDeleteModal" tabindex="-1" role="dialog" aria-labelledby="umtDeleteModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="umtDeleteModalLabel">
					<strong>Delete User Medical Test</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="umtDeleteContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR UMT MEDIA -->
<div class="modal fade" id="umtMediaModal" tabindex="-1" role="dialog" aria-labelledby="umtMediaModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="umtMediaModalLabel">
					<strong>Media User Medical Test</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="umtMediaContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR UBA CREATE -->
<div class="modal fade" id="ubaCreateModal" tabindex="-1" role="dialog" aria-labelledby="ubaCreateModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="ubaCreateModalLabel">
					<strong>Create User Body Analysis</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="ubaCreateContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR UBA EDIT -->
<div class="modal fade" id="ubaEditModal" tabindex="-1" role="dialog" aria-labelledby="ubaEditModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="ubaEditModalLabel">
					<strong>Edit User Body Analysis</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="ubaEditContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR UBA DELETE -->
<div class="modal fade" id="ubaDeleteModal" tabindex="-1" role="dialog" aria-labelledby="ubaDeleteModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="ubaDeleteModalLabel">
					<strong>Delete User Body Analysis</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="ubaDeleteContent">
			</div>
		</div>
	</div>
</div>

<!-- MODAL FOR UBA MEDIA -->
<div class="modal fade" id="ubaMediaModal" tabindex="-1" role="dialog" aria-labelledby="ubaMediaModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h3 class="modal-title text-primary-decorative" id="ubaMediaModalLabel">
					<strong>Media User Body Analysis</strong>
				</h3>
				<button type="button" class="close btn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="ubaMediaMediaContent">
			</div>
		</div>
	</div>
</div>

@section Scripts
{
	<script>
		$(function () {

			// DATATABLE INITIALIZE
			$('.table').DataTable();

			// SCRIPT TO HANDLE CLOSING MODALS
			$(document).on('click', '.close', function () {
				$(this).closest('.modal').modal('hide');
			});

			// HANDLE SWITCHING TABS
			$('#userPanelTabs a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
				e.target // newly activated tab
				e.relatedTarget // previous tab
			});


			$('a[data-toggle="tab"]').on("shown.bs.tab", function (e) {
				$($.fn.dataTable.tables(true)).DataTable().fixedHeader.adjust();
			});

			// ********************************************************************TABS********************************************************************

			// SCRIPT TO HANDLE LOADING TRAINING MODULE TAB AFTER OPENING INDEX
			var userId = $('#userInfoTab').data("userid");
			$.ajax({
				url: '@Url.Action("UserInfo", "Users")',
				type: 'GET',
				data: { userId: userId },
				success: function (data) {
					$('#userInfo').html(data);
					$('#userInfoTab').tab('show');

				},
				error: function () {
					alert("An error occurred while loading 'userInfo' content.");
				}
			});

			// SCRIPT FOR HANDLING USER INFO TAB
			$('#userInfoTab').on('click', function (e) {
				e.preventDefault();

				var userId = $(this).data("userid");

				$.ajax({
					url: '@Url.Action("UserInfo", "Users")',
					type: 'GET',
					data: { userId: userId },
					success: function (data) {
						$('#userInfo').html(data);
						$('#userInfoTab').tab('show');
					},
					error: function () {
						alert("An error occurred while loading user info content.");
					}
				});
			});

			// SCRIPT FOR HANDLING UMT TAB
			$('#umtTab').on('click', function (e) {
				e.preventDefault();

				var userId = $(this).data("userid");

				$.ajax({
					url: '@Url.Action("List", "UserMedicalTests")',
					type: 'GET',
					data: { userId: userId },
					success: function (data) {
						$('#umt').html(data);
						$('.table').DataTable();
						$('#umtTab').tab('show');

					},
					error: function () {
						alert("An error occurred while loading 'umt' content.");
					}
				});
			});

			// Funkcja do inicjalizacji wykresu dla analizy ciała użytkownika (UserBodyAnalysisChartVM)
			function initializeUbaChart() {
				const labels = [
		@foreach (var point in Model.UserChartsVM.UserBodyAnalysisChartVM.WeightDataPointVMs)
		{
			@: '@point.Date?.ToString("yyyy-MM-dd")',
		}
							];

				const weightData = [
		@foreach (var point in Model.UserChartsVM.UserBodyAnalysisChartVM.WeightDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const fatPercentageData = [
		@foreach (var point in Model.UserChartsVM.UserBodyAnalysisChartVM.FatPercentageDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const musclePercentageData = [
		@foreach (var point in Model.UserChartsVM.UserBodyAnalysisChartVM.MusclePercentageDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const waterPercentageData = [
		@foreach (var point in Model.UserChartsVM.UserBodyAnalysisChartVM.WaterPercentageDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const data = {
					labels: labels,
					datasets: [
						{
							label: 'Weight',
							data: weightData,
							borderColor: 'rgba(255, 99, 132, 1)',
							backgroundColor: 'rgba(255, 99, 132, 0.2)',
							fill: false
						},
						{
							label: 'Fat Percentage',
							data: fatPercentageData,
							borderColor: 'rgba(54, 162, 235, 1)',
							backgroundColor: 'rgba(54, 162, 235, 0.2)',
							fill: false
						},
						{
							label: 'Muscle Percentage',
							data: musclePercentageData,
							borderColor: 'rgba(75, 192, 192, 1)',
							backgroundColor: 'rgba(75, 192, 192, 0.2)',
							fill: false
						},
						{
							label: 'Water Percentage',
							data: waterPercentageData,
							borderColor: 'rgba(153, 102, 255, 1)',
							backgroundColor: 'rgba(153, 102, 255, 0.2)',
							fill: false
						}
					]
				};

				const config = {
					type: 'line',
					data: data,
					options: {
						responsive: true,
						plugins: {
							tooltip: {
								mode: 'index',
								intersect: false,
							},
							legend: {
								display: true
							}
						},
						scales: {
							x: {
								type: 'category',
								title: {
									display: true,
									text: 'Date'
								}
							},
							y: {
								title: {
									display: true,
									text: 'Value'
								}
							}
						}
					}
				};

				// Inicjalizacja wykresu
				const ctx = document.getElementById('ubaChart').getContext('2d');
				const ubaChart = new Chart(ctx, config);
			}

			// SCRIPT FOR HANDLING UBA TAB
			$('#ubaTab').on('click', function (e) {
				e.preventDefault();

				var userId = $(this).data("userid");

				$.ajax({
					url: '@Url.Action("List", "UserBodyAnalysis")',
					type: 'GET',
					data: { userId: userId },
					success: function (data) {
						$('#uba').html(data);
						$('.table').DataTable();
						initializeUbaChart();  // Inicjalizacja wykresu po załadowaniu danych
						$('#ubaTab').tab('show');
					},
					error: function () {
						alert("An error occurred while loading 'uba' content.");
					}
				});
			});

			// Funkcja do inicjalizacji wykresu dla pomiarów ciała użytkownika (UserBodyMeasurementChartVM)
			function initializeUbmChart() {
				const labels = [
		@foreach (var point in Model.UserChartsVM.UserBodyMeasurementsChartVM.ChestDataPointVMs)
		{
			@: '@point.Date?.ToString("yyyy-MM-dd")',
		}
							];

				const chestData = [
		@foreach (var point in Model.UserChartsVM.UserBodyMeasurementsChartVM.ChestDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const armsData = [
		@foreach (var point in Model.UserChartsVM.UserBodyMeasurementsChartVM.ArmsDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const waistData = [
		@foreach (var point in Model.UserChartsVM.UserBodyMeasurementsChartVM.WaistDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const thighsData = [
		@foreach (var point in Model.UserChartsVM.UserBodyMeasurementsChartVM.ThighsDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const hipsData = [
		@foreach (var point in Model.UserChartsVM.UserBodyMeasurementsChartVM.HipsDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const data = {
					labels: labels,
					datasets: [
						{
							label: 'Chest',
							data: chestData,
							borderColor: 'rgba(255, 99, 132, 1)',
							backgroundColor: 'rgba(255, 99, 132, 0.2)',
							fill: false
						},
						{
							label: 'Arms',
							data: armsData,
							borderColor: 'rgba(54, 162, 235, 1)',
							backgroundColor: 'rgba(54, 162, 235, 0.2)',
							fill: false
						},
						{
							label: 'Waist',
							data: waistData,
							borderColor: 'rgba(75, 192, 192, 1)',
							backgroundColor: 'rgba(75, 192, 192, 0.2)',
							fill: false
						},
						{
							label: 'Thighs',
							data: thighsData,
							borderColor: 'rgba(153, 102, 255, 1)',
							backgroundColor: 'rgba(153, 102, 255, 0.2)',
							fill: false
						},
						{
							label: 'Hips',
							data: hipsData,
							borderColor: 'rgba(255, 159, 64, 1)',
							backgroundColor: 'rgba(255, 159, 64, 0.2)',
							fill: false
						}
					]
				};

				const config = {
					type: 'line',
					data: data,
					options: {
						responsive: true,
						plugins: {
							tooltip: {
								mode: 'index',
								intersect: false,
							},
							legend: {
								display: true
							}
						},
						scales: {
							x: {
								type: 'category',
								title: {
									display: true,
									text: 'Date'
								}
							},
							y: {
								title: {
									display: true,
									text: 'Values'
								}
							}
						}
					}
				};

				// Inicjalizacja wykresu
				const ctx = document.getElementById('ubmChart').getContext('2d');
				const ubmChart = new Chart(ctx, config);
			}

			// SCRIPT FOR HANDLING UBM TAB
			$('#ubmTab').on('click', function (e) {
				e.preventDefault();

				var userId = $(this).data("userid");

				$.ajax({
					url: '@Url.Action("List", "UserBodyMeasurements")',
					type: 'GET',
					data: { userId: userId },
					success: function (data) {
						$('#ubm').html(data);
						$('.table').DataTable();
						initializeUbmChart();  // Inicjalizacja wykresu po załadowaniu danych
						$('#ubmTab').tab('show');
					},
					error: function () {
						alert("An error occurred while loading 'ubm' content.");
					}
				});
			});

			// Funkcja do inicjalizacji wykresu
			function initializeOrmChart() {
				// Przygotowanie danych dla wykresu
				const labels = [
		@foreach (var point in Model.UserChartsVM.TrainingOrmChartVM.BenchPressDataPointVMs)
		{
			@: '@point.Date?.ToString("yyyy-MM-dd")',
		}
							];

				const benchPressData = [
		@foreach (var point in Model.UserChartsVM.TrainingOrmChartVM.BenchPressDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const overheadPressData = [
		@foreach (var point in Model.UserChartsVM.TrainingOrmChartVM.OverheadPressDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const deadliftData = [
		@foreach (var point in Model.UserChartsVM.TrainingOrmChartVM.DeadliftDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const squatData = [
		@foreach (var point in Model.UserChartsVM.TrainingOrmChartVM.SquatDataPointVMs)
		{
			@: @point.Value,
		}
							];

				const data = {
					labels: labels,
					datasets: [
						{
							label: 'Bench Press',
							data: benchPressData,
							borderColor: 'rgba(255, 99, 132, 1)',
							backgroundColor: 'rgba(255, 99, 132, 0.2)',
							fill: false
						},
						{
							label: 'Overhead Press',
							data: overheadPressData,
							borderColor: 'rgba(54, 162, 235, 1)',
							backgroundColor: 'rgba(54, 162, 235, 0.2)',
							fill: false
						},
						{
							label: 'Deadlift',
							data: deadliftData,
							borderColor: 'rgba(75, 192, 192, 1)',
							backgroundColor: 'rgba(75, 192, 192, 0.2)',
							fill: false
						},
						{
							label: 'Squat',
							data: squatData,
							borderColor: 'rgba(153, 102, 255, 1)',
							backgroundColor: 'rgba(153, 102, 255, 0.2)',
							fill: false
						}
					]
				};

				const config = {
					type: 'line',
					data: data,
					options: {
						responsive: true,
						plugins: {
							tooltip: {
								mode: 'index',
								intersect: false,
							},
							legend: {
								display: true
							}
						},
						scales: {
							x: {
								type: 'category',
								title: {
									display: true,
									text: 'Date'
								}
							},
							y: {
								title: {
									display: true,
									text: 'Value'
								}
							}
						}
					}
				};

				// Inicjalizacja wykresu
				const ctx = document.getElementById('ormChart').getContext('2d');
				const ormChart = new Chart(ctx, config);
			}

			// SCRIPT FOR HANDLING ORM TAB
			$('#ormTab').on('click', function (e) {
				e.preventDefault();

				var userId = $(this).data("userid");

				$.ajax({
					url: '@Url.Action("List", "TrainingOrms")',
					type: 'GET',
					data: { userId: userId },
					success: function (data) {
						// Załaduj zawartość do #orm
						$('#orm').html(data);

						// Inicjalizacja tabeli
						$('.table').DataTable();

						// Inicjalizacja wykresu po załadowaniu PartialView
						initializeOrmChart();  // Funkcja, która rysuje wykres (przekażemy do niej odpowiednią logikę)

						// Ustawienie zakładki na aktywną
						$('#ormTab').tab('show');
					},
					error: function () {
						alert("An error occurred while loading 'orm' content.");
					}
				});
			});

			// ********************************************************************MODALS********************************************************************

			// AJAX FOR LOADING TRAINING ORM CREATE MODAL
			$(document).on('click', '.createOrmBtn', function (e) {
				e.preventDefault();

				var userId = $(this).data("userid");
				$.ajax({
					url: '@Url.Action("Create", "TrainingOrms")',
					type: 'GET',
					data: { userId: userId },
					success: function (data) {
						$('#ormCreateContent').html(data);
						$('#ormCreateModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the orm create modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING ORM EDIT MODAL
			$(document).on('click', '.editOrmBtn', function (e) {
				e.preventDefault();

				var trainingOrmId = $(this).data("trainingormid");
				$.ajax({
					url: '@Url.Action("Edit", "TrainingOrms")',
					type: 'GET',
					data: { trainingOrmId: trainingOrmId },
					success: function (data) {
						$('#ormEditContent').html(data);
						$('#ormEditModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the orm edit modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING ORM Delete MODAL
			$(document).on('click', '.deleteOrmBtn', function (e) {
				e.preventDefault();

				var trainingOrmId = $(this).data("trainingormid");
				$.ajax({
					url: '@Url.Action("Delete", "TrainingOrms")',
					type: 'GET',
					data: { trainingOrmId: trainingOrmId },
					success: function (data) {
						$('#ormDeleteContent').html(data);
						$('#ormDeleteModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the orm delete modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING UBM CREATE MODAL
			$(document).on('click', '.createUbmBtn', function (e) {
				e.preventDefault();

				var userId = $(this).data("userid");
				$.ajax({
					url: '@Url.Action("Create", "UserBodyMeasurements")',
					type: 'GET',
					data: { userId: userId },
					success: function (data) {
						$('#ubmCreateContent').html(data);
						$('#ubmCreateModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the ubm create modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING UBM EDIT MODAL
			$(document).on('click', '.editUbmBtn', function (e) {
				e.preventDefault();

				var bodyMeasurementId = $(this).data("editubmid");
				$.ajax({
					url: '@Url.Action("Edit", "UserBodyMeasurements")',
					type: 'GET',
					data: { bodyMeasurementId: bodyMeasurementId },
					success: function (data) {
						$('#ubmEditContent').html(data);
						$('#ubmEditModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the ubm edit modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING UBM Delete MODAL
			$(document).on('click', '.deleteUbmBtn', function (e) {
				e.preventDefault();

				var bodyMeasurementId = $(this).data("deleteubmid");
				$.ajax({
					url: '@Url.Action("Delete", "UserBodyMeasurements")',
					type: 'GET',
					data: { bodyMeasurementId: bodyMeasurementId },
					success: function (data) {
						$('#ubmDeleteContent').html(data);
						$('#ubmDeleteModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the ubm delete modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING UMT CREATE MODAL
			$(document).on('click', '.createUmtBtn', function (e) {
				e.preventDefault();

				var userId = $(this).data("userid");
				$.ajax({
					url: '@Url.Action("Create", "UserMedicalTests")',
					type: 'GET',
					data: { userId: userId },
					success: function (data) {
						$('#umtCreateContent').html(data);
						$('#umtCreateModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the umt create modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING UMT EDIT MODAL
			$(document).on('click', '.editUmtBtn', function (e) {
				e.preventDefault();

				var medicalTestId = $(this).data("editumtid");
				$.ajax({
					url: '@Url.Action("Edit", "UserMedicalTests")',
					type: 'GET',
					data: { medicalTestId: medicalTestId },
					success: function (data) {
						$('#umtEditContent').html(data);
						$('#umtEditModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the umt edit modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING UMT Delete MODAL
			$(document).on('click', '.deleteUmtBtn', function (e) {
				e.preventDefault();

				var medicalTestId = $(this).data("deleteumtid");
				$.ajax({
					url: '@Url.Action("Delete", "UserMedicalTests")',
					type: 'GET',
					data: { medicalTestId: medicalTestId },
					success: function (data) {
						$('#umtDeleteContent').html(data);
						$('#umtDeleteModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the umt delete modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING UMT Delete MODAL
			$(document).on('click', '.mediaUmtBtn', function (e) {
				e.preventDefault();

				var fileUrl = $(this).data("mediaumturl");
				$.ajax({
					url: '@Url.Action("Media", "UserMedicalTests")',
					type: 'GET',
					data: { fileUrl: fileUrl },
					success: function (data) {
						$('#umtMediaContent').html(data);
						$('#umtMediaModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the umt media modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING UBA CREATE MODAL
			$(document).on('click', '.createUbaBtn', function (e) {
				e.preventDefault();

				var userId = $(this).data("userid");
				$.ajax({
					url: '@Url.Action("Create", "UserBodyAnalysis")',
					type: 'GET',
					data: { userId: userId },
					success: function (data) {
						$('#ubaCreateContent').html(data);
						$('#ubaCreateModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the uba create modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING UBA EDIT MODAL
			$(document).on('click', '.editUbaBtn', function (e) {
				e.preventDefault();

				var bodyAnalysisId = $(this).data("editubaid");
				$.ajax({
					url: '@Url.Action("Edit", "UserBodyAnalysis")',
					type: 'GET',
					data: { bodyAnalysisId: bodyAnalysisId },
					success: function (data) {
						$('#ubaEditContent').html(data);
						$('#ubaEditModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the uba edit modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING UBA Delete MODAL
			$(document).on('click', '.deleteUbaBtn', function (e) {
				e.preventDefault();

				var bodyAnalysisId = $(this).data("deleteubaid");
				$.ajax({
					url: '@Url.Action("Delete", "UserBodyAnalysis")',
					type: 'GET',
					data: { bodyAnalysisId: bodyAnalysisId },
					success: function (data) {
						$('#ubaDeleteContent').html(data);
						$('#ubaDeleteModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the uba delete modal.");
					}
				});
			});

			// AJAX FOR LOADING TRAINING UBA Delete MODAL
			$(document).on('click', '.mediaUbaBtn', function (e) {
				e.preventDefault();

				var fileUrl = $(this).data("mediaubaurl");
				$.ajax({
					url: '@Url.Action("Media", "UserBodyAnalysis")',
					type: 'GET',
					data: { fileUrl: fileUrl },
					success: function (data) {
						$('#batMediaContent').html(data);
						$('#ubaMediaModal').modal('show');
					},
					error: function () {
						alert("An error occurred while loading the uba media modal.");
					}
				});
			});
		});
	</script>
}